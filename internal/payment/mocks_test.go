// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fpabl0/msoft_tdd/internal/payment (interfaces: Gateway)
//
// Generated by this command:
//
//	mockgen -destination ./mocks_test.go -package payment -mock_names Gateway=GatewayMock . Gateway
//

// Package payment is a generated GoMock package.
package payment

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// GatewayMock is a mock of Gateway interface.
type GatewayMock struct {
	ctrl     *gomock.Controller
	recorder *GatewayMockMockRecorder
}

// GatewayMockMockRecorder is the mock recorder for GatewayMock.
type GatewayMockMockRecorder struct {
	mock *GatewayMock
}

// NewGatewayMock creates a new mock instance.
func NewGatewayMock(ctrl *gomock.Controller) *GatewayMock {
	mock := &GatewayMock{ctrl: ctrl}
	mock.recorder = &GatewayMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *GatewayMock) EXPECT() *GatewayMockMockRecorder {
	return m.recorder
}

// RequestPayment mocks base method.
func (m *GatewayMock) RequestPayment(arg0 Request) Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestPayment", arg0)
	ret0, _ := ret[0].(Response)
	return ret0
}

// RequestPayment indicates an expected call of RequestPayment.
func (mr *GatewayMockMockRecorder) RequestPayment(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestPayment", reflect.TypeOf((*GatewayMock)(nil).RequestPayment), arg0)
}
